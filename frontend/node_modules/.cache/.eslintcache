[{"/home/moses/Development/code/phase4/Project/frontend/src/index.js":"1","/home/moses/Development/code/phase4/Project/frontend/src/App.js":"2","/home/moses/Development/code/phase4/Project/frontend/src/pages/Login.jsx":"3","/home/moses/Development/code/phase4/Project/frontend/src/ui/Navbar.jsx":"4","/home/moses/Development/code/phase4/Project/frontend/src/pages/Signup.jsx":"5","/home/moses/Development/code/phase4/Project/frontend/src/pages/Home.jsx":"6","/home/moses/Development/code/phase4/Project/frontend/src/pages/HairStudio.jsx":"7","/home/moses/Development/code/phase4/Project/frontend/src/pages/Reviews.jsx":"8","/home/moses/Development/code/phase4/Project/frontend/src/pages/Makeup.jsx":"9","/home/moses/Development/code/phase4/Project/frontend/src/pages/Contact.jsx":"10","/home/moses/Development/code/phase4/Project/frontend/src/pages/Products.jsx":"11","/home/moses/Development/code/phase4/Project/frontend/src/pages/NailBar.jsx":"12","/home/moses/Development/code/phase4/Project/frontend/src/ui/Logo.jsx":"13","/home/moses/Development/code/phase4/Project/frontend/src/ui/Banner.jsx":"14","/home/moses/Development/code/phase4/Project/frontend/src/ui/ServicesSection.jsx":"15","/home/moses/Development/code/phase4/Project/frontend/src/pages/Appointment.jsx":"16","/home/moses/Development/code/phase4/Project/frontend/src/ui/AppointmentSection.jsx":"17","/home/moses/Development/code/phase4/Project/frontend/src/ui/Gallery.jsx":"18","/home/moses/Development/code/phase4/Project/frontend/src/ui/Footer.jsx":"19","/home/moses/Development/code/phase4/Project/frontend/src/ui/Review.jsx":"20","/home/moses/Development/code/phase4/Project/frontend/src/pages/MyAppointments.jsx":"21","/home/moses/Development/code/phase4/Project/frontend/src/ui/Map.jsx":"22","/home/moses/Development/code/phase4/Project/frontend/src/ui/PText.jsx":"23","/home/moses/Development/code/phase4/Project/frontend/src/ui/SectionTitle.jsx":"24","/home/moses/Development/code/phase4/Project/frontend/src/ui/ContactInfo .jsx":"25"},{"size":347,"mtime":1696352522821,"results":"26","hashOfConfig":"27"},{"size":2066,"mtime":1696547043294,"results":"28","hashOfConfig":"27"},{"size":2927,"mtime":1696500261059,"results":"29","hashOfConfig":"27"},{"size":1648,"mtime":1696550445892,"results":"30","hashOfConfig":"27"},{"size":4187,"mtime":1696499319788,"results":"31","hashOfConfig":"27"},{"size":368,"mtime":1696539233818,"results":"32","hashOfConfig":"27"},{"size":1658,"mtime":1696542178917,"results":"33","hashOfConfig":"27"},{"size":3760,"mtime":1696545223016,"results":"34","hashOfConfig":"27"},{"size":1647,"mtime":1696542299787,"results":"35","hashOfConfig":"27"},{"size":234,"mtime":1696549596684,"results":"36","hashOfConfig":"27"},{"size":80,"mtime":1696422601174,"results":"37","hashOfConfig":"27"},{"size":1649,"mtime":1696542672486,"results":"38","hashOfConfig":"27"},{"size":220,"mtime":1696422223314,"results":"39","hashOfConfig":"27"},{"size":368,"mtime":1696454272572,"results":"40","hashOfConfig":"27"},{"size":1961,"mtime":1696543118510,"results":"41","hashOfConfig":"27"},{"size":5100,"mtime":1696548495726,"results":"42","hashOfConfig":"27"},{"size":1041,"mtime":1696550121298,"results":"43","hashOfConfig":"27"},{"size":2347,"mtime":1696489330336,"results":"44","hashOfConfig":"27"},{"size":1020,"mtime":1696541767199,"results":"45","hashOfConfig":"27"},{"size":605,"mtime":1696544324347,"results":"46","hashOfConfig":"27"},{"size":1561,"mtime":1696548874324,"results":"47","hashOfConfig":"27"},{"size":472,"mtime":1696549519641,"results":"48","hashOfConfig":"27"},{"size":385,"mtime":1696549256516,"results":"49","hashOfConfig":"27"},{"size":728,"mtime":1696549265995,"results":"50","hashOfConfig":"27"},{"size":438,"mtime":1696550301703,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1yeekec",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"55"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/moses/Development/code/phase4/Project/frontend/src/index.js",[],[],["133"],"/home/moses/Development/code/phase4/Project/frontend/src/App.js",["134"],[],"import { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Navbar from \"./ui/Navbar\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Reviews from \"./pages/Reviews\";\nimport HairStudio from \"./pages/HairStudio\";\nimport Makeup from \"./pages/Makeup\";\nimport Contact from \"./pages/Contact\";\nimport Products from \"./pages/Products\";\nimport NailBar from \"./pages/NailBar\";\nimport Appointment from \"./pages/Appointment\";\nimport Footer from \"./ui/Footer\";\nimport { useState, useEffect } from \"react\";\nimport MyAppointments from \"./pages/MyAppointments\";\n\nfunction App() {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/check_session\")\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((user) => setUser(user));\n          console.log(user);\n        }\n      })\n      .then((us) => setUser(us));\n  }, []);\n\n  function handleLogin(user) {\n    setUser(user);\n  }\n\n  function handleSignup(user) {\n    setUser(user);\n  }\n\n  function handleLogout() {\n    navigate(\"/\");\n    setUser(null);\n  }\n\n  return (\n    <>\n      <Navbar user={user} onLogout={handleLogout} />\n\n      <Routes>\n        <Route path=\"/\" element={<Home user={user} />} />\n        <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n        <Route path=\"/signup\" element={<Signup onSignup={handleSignup} />} />\n        <Route path=\"/reviews\" element={<Reviews user={user} />} />\n        <Route path=\"/products\" element={<Products />} />\n        <Route path=\"/hair_studio\" element={<HairStudio />} />\n        <Route path=\"/make_up\" element={<Makeup />} />\n        <Route path=\"/nail_bar\" element={<NailBar />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route path=\"/book_appointment\" element={<Appointment user={user} />} />\n        <Route\n          path=\"/my_appointments\"\n          element={<MyAppointments user={user} />}\n        />\n      </Routes>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","/home/moses/Development/code/phase4/Project/frontend/src/pages/Login.jsx",["135"],[],"import { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction Login({ onLogin }) {\n  const navigate = useNavigate();\n\n  const initialValues = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  function handlelogin(data) {}\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((user) => {\n          console.log(user);\n          if (user.error) {\n            alert(\"User does not exist!\");\n          } else {\n            onLogin(user);\n            navigate(\"/\");\n          }\n        });\n      }\n    });\n    setSubmitting(false);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">Login</div>\n      <div className=\"card-body\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form className=\"forms\">\n              <div className=\"input_fields\">\n                <label htmlFor=\"username\" className=\"form-label\">\n                  Username:\n                </label>\n                <Field\n                  type=\"text\"\n                  name=\"username\"\n                  className=\"form-control\"\n                  placeholder=\"Username\"\n                />\n                <ErrorMessage\n                  name=\"username\"\n                  component=\"div\"\n                  className=\"error\"\n                />\n              </div>\n\n              <div className=\"input_fields\">\n                <label htmlFor=\"password\" className=\"form-label\">\n                  Password:\n                </label>\n                <Field\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Enter your password\"\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"error\"\n                />\n              </div>\n\n              <div className=\"form_message\">\n                <p>\n                  Don't have an account?{\" \"}\n                  <Link className=\"login_link\" to=\"/login\">\n                    Sign Up Now!\n                  </Link>\n                </p>\n              </div>\n\n              <button type=\"submit\" className=\"btn\" disabled={isSubmitting}>\n                Login\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/moses/Development/code/phase4/Project/frontend/src/ui/Navbar.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/pages/Signup.jsx",["136"],[],"import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction Signup({ onSignup }) {\n  const navigate = useNavigate();\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    phone_number: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\"),\n    phone_number: Yup.string().required(\"Phone number is required\"),\n  });\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((user) => {\n          console.log(user);\n          if (user.error) {\n            alert(\"User already exist!\");\n          } else {\n            alert(\"Successfully created new user!\");\n            onSignup(user);\n            navigate(\"/\");\n          }\n        });\n      }\n    });\n    setSubmitting(false);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">Sign Up</div>\n      <div className=\"card-body\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form className=\"forms\">\n              <div className=\"input_fields\">\n                <label htmlFor=\"username\" className=\"form-label\">\n                  Username:\n                </label>\n                <Field\n                  type=\"text\"\n                  name=\"username\"\n                  className=\"form-control\"\n                  placeholder=\"Username\"\n                />\n                <ErrorMessage\n                  name=\"username\"\n                  component=\"div\"\n                  className=\"error\"\n                />\n              </div>\n\n              <div className=\"input_fields\">\n                <label htmlFor=\"email\" className=\"form-label\">\n                  Email:\n                </label>\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Enter your email\"\n                />\n                <ErrorMessage name=\"email\" component=\"div\" className=\"error\" />\n              </div>\n\n              <div className=\"input_fields\">\n                <label htmlFor=\"password\" className=\"form-label\">\n                  Phone Number:\n                </label>\n                <Field\n                  type=\"text\"\n                  name=\"phone_number\"\n                  className=\"form-control\"\n                  placeholder=\"Enter your phone number\"\n                />\n                <ErrorMessage\n                  name=\"phone_number\"\n                  component=\"div\"\n                  className=\"error\"\n                />\n              </div>\n\n              <div className=\"input_fields\">\n                <label htmlFor=\"password\" className=\"form-label\">\n                  Password:\n                </label>\n                <Field\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Enter your password\"\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"error\"\n                />\n              </div>\n\n              <div className=\"form_message\">\n                <p>\n                  Already have an account?{\" \"}\n                  <Link className=\"login_link\" to=\"/login\">\n                    Login\n                  </Link>\n                </p>\n              </div>\n\n              <button type=\"submit\" className=\"btn\" disabled={isSubmitting}>\n                Signup\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","/home/moses/Development/code/phase4/Project/frontend/src/pages/Home.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/pages/HairStudio.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/pages/Reviews.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/pages/Makeup.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/pages/Contact.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/pages/Products.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/pages/NailBar.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/ui/Logo.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/ui/Banner.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/ui/ServicesSection.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/pages/Appointment.jsx",["137"],[],"import { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction Appointment({ user }) {\n  const [date, setDate] = useState(new Date());\n  const [showTime, setShowTime] = useState(false);\n  const [time, setTime] = useState(null);\n  const [info, setInfo] = useState(false);\n  const [extra_information, setExtra_information] = useState(\"\");\n  const [service, setservice] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  if (!user?.username) {\n    return (\n      <div className=\"error-card\">\n        <div className=\"error-wrap\">\n          <p className=\"error-message\">\n            😲 You Must be logged in to book an appointment!\n          </p>\n\n          <Link to=\"/login\">\n            <button className=\"btn erro-btn\">Proceed to login page</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  function postAppointment(data) {\n    fetch(\"/appointments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          alert(\"Failed to create appointment\");\n        } else {\n          alert(`Appointment booked successfully!`);\n          navigate(\"/my_appointments\");\n        }\n      })\n      .then((data) => console.log(data));\n  }\n\n  const openTimes = [\n    \"08:00\",\n    \"09:00\",\n    \"10:00\",\n    \"11:00\",\n    \"12:00\",\n    \"14:00\",\n    \"15:00\",\n    \"16:00\",\n    \"17:00\",\n    \"18:00\",\n    \"19:00\",\n    \"20:00\",\n  ];\n\n  const Services = [\n    \"WASH & BLOW DRY\",\n    \"HAIR RELAXING & TREATMENT\",\n    \"WEAVING AND WIG INSTALLATION\",\n    \"WIG WASHING AND REVAMPING\",\n    \"BRAIDING\",\n    \"STYLING & BRIDAL\",\n    \"Makeup Application\",\n    \"Bridal Makeup\",\n    \"MANICURE & PEDICURE\",\n    \"NAILS\",\n  ];\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!date) {\n      alert(\"Date cannot be empty!\");\n      return;\n    }\n\n    if (!service) {\n      alert(\"You must choose a service!\");\n      return;\n    }\n\n    if (!time) {\n      alert(\"Pick a suitable time for the appointment!\");\n      return;\n    }\n\n    const formattedDate = date.toISOString().split(\"T\")[0];\n\n    const data = {\n      date: formattedDate,\n      service,\n      time,\n      extra_information,\n    };\n\n    postAppointment(data);\n\n    setDate(new Date());\n    setShowTime(false);\n    setTime(null);\n    setInfo(false);\n    setExtra_information(\"\");\n    setservice(\"\");\n  }\n\n  function displayInfo(e) {\n    setInfo(true);\n    setTime(e.target.value);\n  }\n\n  const handleChange = (e) => setExtra_information(e.target.value);\n\n  const handleServiceClick = (serv) => {\n    setservice(serv);\n  };\n\n  return (\n    <div className=\"appointment-form\">\n      <h1 className=\"calendar-header\">BOOK AN APPOINTMENT NOW!</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"calendar-container\">\n          <h2 className=\"apph2\">Pick a date</h2>\n          <Calendar\n            onChange={setDate}\n            value={date}\n            onClickDay={() => setShowTime(true)}\n            className=\"react-calendar\"\n          />\n        </div>\n\n        {date.length > 0 ? (\n          <p className=\"appointment-info\">\n            <span>Appointment Date:</span> {date.toDateString()}\n          </p>\n        ) : null}\n\n        <h2 className=\"apph2\">Pick a time</h2>\n        <div className=\"time-selector\">\n          {openTimes.map((times) => {\n            return (\n              <div key={times}>\n                <input\n                  type=\"button\"\n                  onClick={(e) => displayInfo(e)}\n                  value={times}\n                  className=\"time-button\"\n                />\n              </div>\n            );\n          })}\n          {info ? (\n            <p className=\"appointment-info\">\n              Your appointment is scheduled for {time} on {date.toDateString()}\n            </p>\n          ) : null}\n        </div>\n\n        <div className=\"additional-info-form\">\n          <h2 className=\"apph2\">Select a service: </h2>\n          {Services.map((serv) => (\n            <div key={serv}>\n              <input\n                type=\"radio\"\n                id={serv}\n                name=\"services\"\n                value={serv}\n                onChange={() => handleServiceClick(serv)}\n                checked={service === serv}\n                className=\"service-radio\"\n              />\n              <label htmlFor={serv} className=\"service-name\">\n                {\" \"}\n                {serv}\n              </label>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"additional-info-form\">\n          <h2 htmlFor=\"extra-info\" className=\"info-title apph2\">\n            Any additional personalized info (Optional):\n          </h2>\n          <br />\n          <textarea\n            type=\"text\"\n            id=\"extra-info\"\n            value={extra_information}\n            onChange={handleChange}\n          />\n\n          <button className=\"submit-button\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Appointment;\n","/home/moses/Development/code/phase4/Project/frontend/src/ui/AppointmentSection.jsx",["138"],[],"/home/moses/Development/code/phase4/Project/frontend/src/ui/Gallery.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/ui/Footer.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/ui/Review.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/pages/MyAppointments.jsx",["139","140"],[],"import { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction MyAppointments({ user }) {\n  const [appointments, setAppointments] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(`my_appointments/${user ? user?.id : null}`)\n      .then((res) => res.json())\n      .then((data) => setAppointments(data.appointments));\n  }, [user?.id]);\n\n  if (!user?.username) {\n    return (\n      <div className=\"error-card\">\n        <div className=\"error-wrap\">\n          <p className=\"error-message\">\n            You have to be signed in to see your appointments!\n          </p>\n\n          <Link to=\"/login\">\n            <button className=\"btn erro-btn\">Proceed to login page</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page\">\n      <h1 className=\"appheading\">My Appointments</h1>\n      {appointments.map((appoinment) => (\n        <ul className=\"appointment\">\n          <li>\n            <span className=\"apptitle\">Service 💼: </span>\n            {appoinment.service}\n          </li>\n          <li>\n            <span className=\"apptitle\">Date 🗓️: </span>\n            {appoinment.date}\n          </li>\n          <li>\n            <span className=\"apptitle\">Time ⏰: </span>\n            {appoinment.time}\n          </li>\n          <li>\n            <span className=\"apptitle\">Extra Information 📩 : </span>\n            {appoinment.extra_information}\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n}\n\nexport default MyAppointments;\n","/home/moses/Development/code/phase4/Project/frontend/src/ui/Map.jsx",["141"],[],"/home/moses/Development/code/phase4/Project/frontend/src/ui/PText.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/ui/SectionTitle.jsx",[],[],"/home/moses/Development/code/phase4/Project/frontend/src/ui/ContactInfo .jsx",[],[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":30,"column":6,"nodeType":"146","endLine":30,"endColumn":8,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":18,"column":12,"nodeType":"150","messageId":"151","endLine":18,"endColumn":23},{"ruleId":"148","severity":1,"message":"152","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"153","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":18},{"ruleId":"148","severity":1,"message":"154","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":6,"column":9,"nodeType":"150","messageId":"151","endLine":6,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":12,"column":6,"nodeType":"146","endLine":12,"endColumn":16,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":4,"column":7,"nodeType":"159","endLine":13,"endColumn":8},"no-new-object",["160"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["161"],"no-unused-vars","'handlelogin' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'showTime' is assigned a value but never used.","'Link' is defined but never used.","'navigate' is assigned a value but never used.",["162"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-object-constructor",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [user]",{"range":"167","text":"168"},"Update the dependencies array to be: [user, user?.id]",{"range":"169","text":"170"},[963,965],"[user]",[399,409],"[user, user?.id]"]